@font-face {
    font-family: abster;
    src: url(.font/abster-webfont.woff) format('woff');
}

*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.container {
    width: 100%;
    height: 100vh;
    /* vh = viewport height vw = viewport width 
    즉, 현재 실행중인 스크린 크기에 맞춰 상대적 크기를 반환하겠다는 뜻입니다. */
    background: linear-gradient(rgba(0,0,0,0.8), rgba(0,0,0,0.8)),url(images/room.jpg);
}

.container .header{
    width: 80%;
    height: 80px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
}


/* 컨테이너 클래스 밑에 헤더라는 클래스를 선택자로 지정해서
 이 요소가 항상 수평기준으로 중앙에 오게하기위해 마진을 0auto라고 적음.
 아이템들의 원할한 정렬을 위해 디스플레이값을 플렉스로 지정
  justify-content: space-between <- 이 요소가 항상 좌우 끝으로 붙어서 출력이 되게작성*/

  .container .header h1 a {
    text-decoration: none;
    color: white;
    font-family: abster;
  }

  .container .nav ul li {
    display: inline-block;
    margin:0 10px;
  }

  .container .nav ul li a {
    text-decoration: none;
    color: white;
  }

  .container .nav ul li a:hover {
    color: #1fdfdf;
}

/* 헤더영역 끝 */


.container .hero{
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    color: white;
    text-align: center;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}

.container .hero h2 {
    font-size: 60px;
    margin-bottom: 20px;
}

.container .hero p {
    font-size: 22px;
}

.container .hero button {
    background: none;
    border: 2px solid darkseagreen;
    color: white;
    padding: 15px 20px;
    border-radius: 20px;
    margin-top: 30px;
    outline: none;
    cursor: pointer;
    transition: all .4s;
}

.container .hero button:hover {
    background-color: darkslategray;
}